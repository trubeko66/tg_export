#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
"""

from content_filter import ContentFilter, FilterConfig

def test_filter():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    filter_instance = ContentFilter(FilterConfig())
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        # –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏)
        "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        "–ò–∑—É—á–∞—é Python –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∞—è –ø–æ–≥–æ–¥–∞",
        "–ù–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é",
        "–û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —Å –Ω—É–ª—è",
        "–ü—Ä–æ—Ñ–µ—Å—Å–∏—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞",
        
        # –†–µ–∫–ª–∞–º–∞ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã)
        "–†–µ–∫–ª–∞–º–∞: —Å–∫–∏–¥–∫–∞ 50% –Ω–∞ –∫—É—Ä—Å—ã",
        "–°–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–π –ø–æ—Å—Ç –æ—Ç Skillbox",
        "–ü—Ä–æ–º–æ–∫–æ–¥ SAVE20 –¥–ª—è —Å–∫–∏–¥–∫–∏",
        "–ù–∞ –ø—Ä–∞–≤–∞—Ö —Ä–µ–∫–ª–∞–º—ã",
        
        # IT-—à–∫–æ–ª—ã –±–µ–∑ –ø—Ä–æ–º–æ (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏)
        "Skillbox –≤—ã–ø—É—Å—Ç–∏–ª –Ω–æ–≤—ã–π –∫—É—Ä—Å",
        "–ù–µ—Ç–æ–ª–æ–≥–∏—è –ø—Ä–æ–≤–æ–¥–∏—Ç –≤–µ–±–∏–Ω–∞—Ä",
        "GeekBrains –æ—Ç–∫—Ä—ã–ª –Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫",
        
        # IT-—à–∫–æ–ª—ã —Å –ø—Ä–æ–º–æ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã)
        "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å Skillbox",
        "–ù–µ—Ç–æ–ª–æ–≥–∏—è: –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ",
        "GeekBrains: –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤",
        "–ú–∏—Ç–∞–ø –æ—Ç Skillbox",
        "–í–µ–±–∏–Ω–∞—Ä –æ—Ç –ù–µ—Ç–æ–ª–æ–≥–∏–∏",
        "–°–µ–º–∏–Ω–∞—Ä –æ—Ç GeekBrains",
        
        # –ü—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        "",
        "   ",
        None
    ]
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ò–õ–¨–¢–†–ê–¶–ò–ò –°–û–û–ë–©–ï–ù–ò–ô")
    print("=" * 50)
    
    for i, message in enumerate(test_messages, 1):
        if message is None:
            message = ""
        
        should_filter, reason = filter_instance.should_filter_message(message)
        status = "‚ùå –û–¢–§–ò–õ–¨–¢–†–û–í–ê–ù–û" if should_filter else "‚úÖ –ü–†–û–ô–î–ï–¢"
        
        print(f"{i:2d}. {status} - {reason}")
        print(f"    –¢–µ–∫—Å—Ç: '{message}'")
        print()

if __name__ == "__main__":
    test_filter()

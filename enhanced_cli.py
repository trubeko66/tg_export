#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è Telegram Channel Exporter
"""

import asyncio
import time
from datetime import datetime
from pathlib import Path
from typing import Dict, List, Any, Optional, Callable
from dataclasses import dataclass

from rich.console import Console
from rich.table import Table
from rich.panel import Panel
from rich.layout import Layout
from rich.live import Live
from rich.text import Text
from rich.progress import Progress, SpinnerColumn, TextColumn, BarColumn, TimeElapsedColumn, TimeRemainingColumn
from rich.align import Align
from rich.columns import Columns
from rich.prompt import Prompt, Confirm, IntPrompt
from rich.status import Status
from rich.syntax import Syntax
from rich import box
from rich.console import Group
from rich.markdown import Markdown

from analytics import AnalyticsReporter
from channel_dashboard import ChannelDashboard


@dataclass
class MenuOption:
    """–û–ø—Ü–∏—è –º–µ–Ω—é"""
    key: str
    title: str
    description: str
    handler: Callable
    enabled: bool = True


class EnhancedCLI:
    """–£–ª—É—á—à–µ–Ω–Ω—ã–π CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    
    def __init__(self, console: Console):
        self.console = console
        self.analytics_reporter = AnalyticsReporter(console)
        self.dashboard = ChannelDashboard(console)
        self.current_menu = "main"
        self.menu_stack = []
        
    def show_welcome_screen(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
        welcome_text = """
# üöÄ Telegram Channel Exporter

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ª—É—á—à–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é Telegram Channel Exporter!

## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- üìä **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞** ‚Äî –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–Ω–∞–ª–∞–º
- üó∫Ô∏è **–ö–∞—Ä—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤** ‚Äî –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
- üìà **–û—Ç—á–µ—Ç—ã** ‚Äî —ç–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ JSON –∏ CSV
- üéØ **–£–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å** ‚Äî —É–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
- ‚ö° **–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è** ‚Äî –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω—é

–ù–∞–∂–º–∏—Ç–µ **Enter** –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–ª–∏ **Esc** –¥–ª—è –≤—ã—Ö–æ–¥–∞.
        """
        
        panel = Panel(
            Markdown(welcome_text),
            title="üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
            border_style="green",
            padding=(1, 2)
        )
        
        self.console.print(panel)
        
        # –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏
        try:
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        except KeyboardInterrupt:
            return False
        
        return True
    
    def show_main_menu(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        self.console.clear()
        
        menu_options = [
            MenuOption("1", "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–æ–≤", self.show_analytics_menu),
            MenuOption("2", "üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤", "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤", self.show_channel_dashboard),
            MenuOption("3", "üìà –û—Ç—á–µ—Ç—ã", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —ç–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤", self.show_reports_menu),
            MenuOption("4", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π", self.show_settings_menu),
            MenuOption("5", "üîÑ –≠–∫—Å–ø–æ—Ä—Ç", "–ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤", self.show_export_menu),
            MenuOption("6", "üìã –õ–æ–≥–∏", "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Ä–∞–±–æ—Ç—ã", self.show_logs_menu),
            MenuOption("7", "‚ùì –°–ø—Ä–∞–≤–∫–∞", "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –ø–æ–º–æ—â—å", self.show_help_menu),
            MenuOption("0", "üö™ –í—ã—Ö–æ–¥", "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã", None)
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –º–µ–Ω—é
        table = Table(title="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", box=box.ROUNDED, show_header=False)
        table.add_column("–ö–æ–¥", style="cyan", width=4, justify="center")
        table.add_column("–ù–∞–∑–≤–∞–Ω–∏–µ", style="green", min_width=20)
        table.add_column("–û–ø–∏—Å–∞–Ω–∏–µ", style="white")
        
        for option in menu_options:
            if option.enabled:
                table.add_row(option.key, option.title, option.description)
            else:
                table.add_row(option.key, f"[dim]{option.title}[/dim]", f"[dim]{option.description}[/dim]")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
        info_panel = Panel(
            f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
            f"–í–µ—Ä—Å–∏—è: 1.2.0\n"
            f"–°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
            title="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            border_style="blue"
        )
        
        # –°–æ–∑–¥–∞–µ–º –º–∞–∫–µ—Ç
        layout = Layout()
        layout.split_column(
            Layout(table, name="menu", ratio=2),
            Layout(info_panel, name="info", size=8)
        )
        
        self.console.print(layout)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        choice = Prompt.ask(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
            choices=[opt.key for opt in menu_options if opt.enabled] + ["q", "quit", "exit"]
        )
        
        if choice in ["q", "quit", "exit", "0"]:
            return "exit"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        selected_option = next((opt for opt in menu_options if opt.key == choice), None)
        if selected_option and selected_option.handler:
            return selected_option.handler()
        
        return "main"
    
    def show_analytics_menu(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
        self.console.clear()
        
        analytics_options = [
            MenuOption("1", "üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º", self.show_general_analytics),
            MenuOption("2", "üìà –ê–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–∞", "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞", self.show_channel_analysis),
            MenuOption("3", "üîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤", "–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–æ–≤", self.show_channel_comparison),
            MenuOption("4", "‚è∞ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "–ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏", self.show_temporal_analytics),
            MenuOption("0", "üîô –ù–∞–∑–∞–¥", "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", None)
        ]
        
        table = Table(title="üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", box=box.ROUNDED, show_header=False)
        table.add_column("–ö–æ–¥", style="cyan", width=4, justify="center")
        table.add_column("–ù–∞–∑–≤–∞–Ω–∏–µ", style="green", min_width=20)
        table.add_column("–û–ø–∏—Å–∞–Ω–∏–µ", style="white")
        
        for option in analytics_options:
            table.add_row(option.key, option.title, option.description)
        
        self.console.print(table)
        
        choice = Prompt.ask(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
            choices=[opt.key for opt in analytics_options] + ["q", "quit"]
        )
        
        if choice in ["q", "quit", "0"]:
            return "main"
        
        selected_option = next((opt for opt in analytics_options if opt.key == choice), None)
        if selected_option and selected_option.handler:
            return selected_option.handler()
        
        return "analytics"
    
    def show_general_analytics(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É"""
        self.console.clear()
        
        with Status("–ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...", spinner="dots"):
            # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            time.sleep(1)  # –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        stats_panel = Panel(
            "üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
            "‚Ä¢ –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: 15\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: 12\n"
            "‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: 45,678\n"
            "‚Ä¢ –ú–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: 2,345\n"
            "‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: 1.2 –ì–ë\n"
            "‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–∫—Å–ø–æ—Ä—Ç: 2024-01-15 14:30",
            title="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            border_style="green"
        )
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–æ–ø-–∫–∞–Ω–∞–ª–æ–≤
        top_table = Table(title="–¢–æ–ø-5 –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", box=box.ROUNDED)
        top_table.add_column("–ö–∞–Ω–∞–ª", style="cyan")
        top_table.add_column("–°–æ–æ–±—â–µ–Ω–∏–π", style="green", justify="right")
        top_table.add_column("–ú–µ–¥–∏–∞", style="yellow", justify="right")
        top_table.add_column("–†–∞–∑–º–µ—Ä (–ú–ë)", style="blue", justify="right")
        
        top_table.add_row("IT News", "12,345", "456", "234.5")
        top_table.add_row("Tech Updates", "8,765", "321", "187.2")
        top_table.add_row("Programming", "6,543", "234", "156.8")
        top_table.add_row("AI Research", "4,321", "123", "98.4")
        top_table.add_row("Dev Tools", "3,210", "89", "67.3")
        
        # –°–æ–∑–¥–∞–µ–º –º–∞–∫–µ—Ç
        layout = Layout()
        layout.split_column(
            Layout(stats_panel, name="stats", size=12),
            Layout(top_table, name="top", ratio=1)
        )
        
        self.console.print(layout)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "analytics"
    
    def show_channel_analysis(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–∞"""
        self.console.clear()
        
        # –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
        channels = [
            "IT News",
            "Tech Updates", 
            "Programming",
            "AI Research",
            "Dev Tools"
        ]
        
        table = Table(title="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", box=box.ROUNDED)
        table.add_column("‚Ññ", style="cyan", width=4, justify="center")
        table.add_column("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞", style="green")
        
        for i, channel in enumerate(channels, 1):
            table.add_row(str(i), channel)
        
        self.console.print(table)
        
        try:
            choice = IntPrompt.ask(
                "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞–Ω–∞–ª–∞",
                choices=[str(i) for i in range(1, len(channels) + 1)]
            )
            
            selected_channel = channels[choice - 1]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            with Status(f"–ê–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–∞ '{selected_channel}'...", spinner="dots"):
                time.sleep(2)  # –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
            
            # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
            analysis_panel = Panel(
                f"üìä –ê–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–∞: {selected_channel}\n\n"
                f"‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: 12,345\n"
                f"‚Ä¢ –ú–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: 456\n"
                f"‚Ä¢ –†–∞–∑–º–µ—Ä –º–µ–¥–∏–∞: 234.5 –ú–ë\n"
                f"‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å: 45.2\n"
                f"‚Ä¢ –ü–∏–∫–æ–≤—ã–µ —á–∞—Å—ã: 10:00, 14:00, 18:00\n"
                f"‚Ä¢ –£—Ä–æ–≤–µ–Ω—å –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏: 8.7/10\n"
                f"‚Ä¢ –¢–µ–º–ø —Ä–æ—Å—Ç–∞: +12.3%\n"
                f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: 2024-01-15 16:45\n\n"
                f"–¢–æ–ø-–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:\n"
                f"‚Ä¢ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (234)\n"
                f"‚Ä¢ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (189)\n"
                f"‚Ä¢ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (156)\n"
                f"‚Ä¢ –∫–æ–¥ (123)\n"
                f"‚Ä¢ –∞–ª–≥–æ—Ä–∏—Ç–º (98)",
                title=f"üìà –ê–Ω–∞–ª–∏–∑: {selected_channel}",
                border_style="blue"
            )
            
            self.console.print(analysis_panel)
            
        except (ValueError, IndexError):
            self.console.print("[red]–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –∫–∞–Ω–∞–ª–∞[/red]")
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "analytics"
    
    def show_channel_comparison(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤"""
        self.console.clear()
        
        with Status("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...", spinner="dots"):
            time.sleep(1)
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        comparison_table = Table(title="–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤", box=box.ROUNDED)
        comparison_table.add_column("–ö–∞–Ω–∞–ª", style="cyan")
        comparison_table.add_column("–°–æ–æ–±—â–µ–Ω–∏–π", style="green", justify="right")
        comparison_table.add_column("–ú–µ–¥–∏–∞", style="yellow", justify="right")
        comparison_table.add_column("–†–∞–∑–º–µ—Ä (–ú–ë)", style="blue", justify="right")
        comparison_table.add_column("–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å/–¥–µ–Ω—å", style="magenta", justify="right")
        comparison_table.add_column("–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å", style="red", justify="right")
        
        comparison_table.add_row("IT News", "12,345", "456", "234.5", "45.2", "8.7")
        comparison_table.add_row("Tech Updates", "8,765", "321", "187.2", "32.1", "7.9")
        comparison_table.add_row("Programming", "6,543", "234", "156.8", "24.8", "8.2")
        comparison_table.add_row("AI Research", "4,321", "123", "98.4", "16.3", "7.5")
        comparison_table.add_row("Dev Tools", "3,210", "89", "67.3", "12.1", "6.8")
        
        self.console.print(comparison_table)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "analytics"
    
    def show_temporal_analytics(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É"""
        self.console.clear()
        
        with Status("–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤...", spinner="dots"):
            time.sleep(1)
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
        temporal_panel = Panel(
            "‚è∞ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n\n"
            "üìÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏:\n"
            "‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: 15.2%\n"
            "‚Ä¢ –í—Ç–æ—Ä–Ω–∏–∫: 18.7%\n"
            "‚Ä¢ –°—Ä–µ–¥–∞: 16.4%\n"
            "‚Ä¢ –ß–µ—Ç–≤–µ—Ä–≥: 14.8%\n"
            "‚Ä¢ –ü—è—Ç–Ω–∏—Ü–∞: 12.3%\n"
            "‚Ä¢ –°—É–±–±–æ—Ç–∞: 11.2%\n"
            "‚Ä¢ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: 11.4%\n\n"
            "üïê –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º:\n"
            "‚Ä¢ 09:00-12:00: 25.3% (–ø–∏–∫)\n"
            "‚Ä¢ 12:00-15:00: 18.7%\n"
            "‚Ä¢ 15:00-18:00: 22.1% (–ø–∏–∫)\n"
            "‚Ä¢ 18:00-21:00: 19.4%\n"
            "‚Ä¢ 21:00-00:00: 14.5%\n\n"
            "üìà –¢—Ä–µ–Ω–¥—ã:\n"
            "‚Ä¢ –†–æ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: +5.2% –∑–∞ –º–µ—Å—è—Ü\n"
            "‚Ä¢ –ü–∏–∫–æ–≤—ã–µ –¥–Ω–∏: –≤—Ç–æ—Ä–Ω–∏–∫, —Å—Ä–µ–¥–∞\n"
            "‚Ä¢ –¢–∏—Ö–∏–µ –¥–Ω–∏: –≤—ã—Ö–æ–¥–Ω—ã–µ",
            title="‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã",
            border_style="yellow"
        )
        
        self.console.print(temporal_panel)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "analytics"
    
    def show_channel_dashboard(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É –∫–∞–Ω–∞–ª–æ–≤"""
        self.console.clear()
        
        with Status("–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã –∫–∞–Ω–∞–ª–æ–≤...", spinner="dots"):
            time.sleep(1)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É –∫–∞–Ω–∞–ª–æ–≤
        dashboard_panel = Panel(
            "üó∫Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤\n\n"
            "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤\n"
            "—Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.\n\n"
            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
            "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É (–∞–∫—Ç–∏–≤–Ω—ã–µ/–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ/–æ—à–∏–±–∫–∏)\n"
            "‚Ä¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º\n"
            "‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞–Ω–∞–ª–∞\n"
            "‚Ä¢ –í—ã–±–æ—Ä –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π\n"
            "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–∞–∂–¥–æ–º—É –∫–∞–Ω–∞–ª—É\n\n"
            "–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.",
            title="üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤",
            border_style="cyan"
        )
        
        self.console.print(dashboard_panel)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "main"
    
    def show_reports_menu(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –æ—Ç—á–µ—Ç–æ–≤"""
        self.console.clear()
        
        reports_options = [
            MenuOption("1", "üìä JSON –æ—Ç—á–µ—Ç", "–≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ", self.export_json_report),
            MenuOption("2", "üìà CSV –æ—Ç—á–µ—Ç", "–≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ CSV —Ñ–æ—Ä–º–∞—Ç–µ", self.export_csv_report),
            MenuOption("3", "üìã HTML –æ—Ç—á–µ—Ç", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞", self.export_html_report),
            MenuOption("4", "üìÑ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç", "–ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏", self.export_detailed_report),
            MenuOption("0", "üîô –ù–∞–∑–∞–¥", "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", None)
        ]
        
        table = Table(title="üìà –û—Ç—á–µ—Ç—ã", box=box.ROUNDED, show_header=False)
        table.add_column("–ö–æ–¥", style="cyan", width=4, justify="center")
        table.add_column("–ù–∞–∑–≤–∞–Ω–∏–µ", style="green", min_width=20)
        table.add_column("–û–ø–∏—Å–∞–Ω–∏–µ", style="white")
        
        for option in reports_options:
            table.add_row(option.key, option.title, option.description)
        
        self.console.print(table)
        
        choice = Prompt.ask(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á–µ—Ç–∞",
            choices=[opt.key for opt in reports_options] + ["q", "quit"]
        )
        
        if choice in ["q", "quit", "0"]:
            return "main"
        
        selected_option = next((opt for opt in reports_options if opt.key == choice), None)
        if selected_option and selected_option.handler:
            return selected_option.handler()
        
        return "reports"
    
    def export_json_report(self) -> str:
        """–≠–∫—Å–ø–æ—Ä—Ç JSON –æ—Ç—á–µ—Ç–∞"""
        self.console.clear()
        
        with Status("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è JSON –æ—Ç—á–µ—Ç–∞...", spinner="dots"):
            time.sleep(2)
        
        self.console.print("[green]‚úÖ JSON –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: analytics_report.json[/green]")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "reports"
    
    def export_csv_report(self) -> str:
        """–≠–∫—Å–ø–æ—Ä—Ç CSV –æ—Ç—á–µ—Ç–∞"""
        self.console.clear()
        
        with Status("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è CSV –æ—Ç—á–µ—Ç–∞...", spinner="dots"):
            time.sleep(2)
        
        self.console.print("[green]‚úÖ CSV –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: analytics_report.csv[/green]")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "reports"
    
    def export_html_report(self) -> str:
        """–≠–∫—Å–ø–æ—Ä—Ç HTML –æ—Ç—á–µ—Ç–∞"""
        self.console.clear()
        
        with Status("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞...", spinner="dots"):
            time.sleep(3)
        
        self.console.print("[green]‚úÖ HTML –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: analytics_report.html[/green]")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "reports"
    
    def export_detailed_report(self) -> str:
        """–≠–∫—Å–ø–æ—Ä—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
        self.console.clear()
        
        with Status("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...", spinner="dots"):
            time.sleep(4)
        
        self.console.print("[green]‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: detailed_report.html[/green]")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "reports"
    
    def show_settings_menu(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        self.console.clear()
        
        settings_panel = Panel(
            "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
            "–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã:\n"
            "‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram API\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã WebDAV\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏\n"
            "‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞\n\n"
            "–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫.",
            title="‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏",
            border_style="yellow"
        )
        
        self.console.print(settings_panel)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "main"
    
    def show_export_menu(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —ç–∫—Å–ø–æ—Ä—Ç–∞"""
        self.console.clear()
        
        export_panel = Panel(
            "üîÑ –≠–∫—Å–ø–æ—Ä—Ç –∫–∞–Ω–∞–ª–æ–≤\n\n"
            "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:\n"
            "‚Ä¢ –í—ã–±–æ—Ä –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —ç–∫—Å–ø–æ—Ä—Ç–∞\n"
            "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n\n"
            "–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —ç–∫—Å–ø–æ—Ä—Ç–∞.",
            title="üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–æ–º",
            border_style="green"
        )
        
        self.console.print(export_panel)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "main"
    
    def show_logs_menu(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ª–æ–≥–æ–≤"""
        self.console.clear()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞
        logs_panel = Panel(
            "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞\n\n"
            "2024-01-15 16:45:23 [INFO] –≠–∫—Å–ø–æ—Ä—Ç –∫–∞–Ω–∞–ª–∞ 'IT News' –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ\n"
            "2024-01-15 16:44:15 [INFO] –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ 45 —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            "2024-01-15 16:43:02 [INFO] –ó–∞–≥—Ä—É–∂–µ–Ω–æ 12 –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤\n"
            "2024-01-15 16:42:30 [INFO] –ù–∞—á–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç –∫–∞–Ω–∞–ª–∞ 'IT News'\n"
            "2024-01-15 16:41:45 [INFO] –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            "2024-01-15 16:40:12 [INFO] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API\n"
            "2024-01-15 16:39:58 [INFO] –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n\n"
            "–ü–æ–ª–Ω—ã–π –ª–æ–≥ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ñ–∞–π–ª–µ: export.log",
            title="üìã –õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã",
            border_style="blue"
        )
        
        self.console.print(logs_panel)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "main"
    
    def show_help_menu(self) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        self.console.clear()
        
        help_text = """
# üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ Telegram Channel Exporter

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

### üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
- **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞** ‚Äî —Å–≤–æ–¥–∫–∞ –ø–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º
- **–ê–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–∞** ‚Äî –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
- **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤** ‚Äî —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
- **–í—Ä–µ–º–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞** ‚Äî –∞–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏

### üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤
- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
- –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
- –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

### üìà –û—Ç—á–µ—Ç—ã
- –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON, CSV, HTML
- –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏
- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

## –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏

- **Ctrl+C** ‚Äî –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
- **Esc** ‚Äî –≤–æ–∑–≤—Ä–∞—Ç –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
- **Enter** ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
- **q/quit** ‚Äî –≤—ã—Ö–æ–¥ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª `export.log`
2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
4. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

## –í–µ—Ä—Å–∏—è: 1.2.0
        """
        
        help_panel = Panel(
            Markdown(help_text),
            title="‚ùì –°–ø—Ä–∞–≤–∫–∞",
            border_style="green",
            padding=(1, 2)
        )
        
        self.console.print(help_panel)
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return "main"
    
    async def run(self):
        """–ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ CLI"""
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
            if not self.show_welcome_screen():
                return
            
            # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–µ–Ω—é
            while True:
                try:
                    if self.current_menu == "main":
                        result = self.show_main_menu()
                    elif self.current_menu == "analytics":
                        result = self.show_analytics_menu()
                    elif self.current_menu == "reports":
                        result = self.show_reports_menu()
                    else:
                        result = "main"
                    
                    if result == "exit":
                        break
                    
                    self.current_menu = result
                    
                except KeyboardInterrupt:
                    if Confirm.ask("\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?"):
                        break
                    continue
                except Exception as e:
                    self.console.print(f"[red]–û—à–∏–±–∫–∞: {e}[/red]")
                    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                    self.current_menu = "main"
            
            # –ü—Ä–æ—â–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.console.clear()
            goodbye_panel = Panel(
                "üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Telegram Channel Exporter!\n\n"
                "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
                title="üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
                border_style="green"
            )
            self.console.print(goodbye_panel)
            
        except Exception as e:
            self.console.print(f"[red]–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}[/red]")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    console = Console()
    cli = EnhancedCLI(console)
    await cli.run()


if __name__ == "__main__":
    asyncio.run(main())

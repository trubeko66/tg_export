#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
"""

import json
import os
from pathlib import Path
from typing import Dict, Optional, Any
from dataclasses import dataclass, asdict
from rich.console import Console
from rich.prompt import Prompt, Confirm
from rich.panel import Panel
from rich.table import Table
from rich import box
import getpass


@dataclass
class TelegramConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram API"""
    api_id: Optional[str] = None
    api_hash: Optional[str] = None
    phone: Optional[str] = None


@dataclass
class BotConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    bot_token: Optional[str] = None
    chat_id: Optional[str] = None
    enabled: bool = False


@dataclass
class AppConfig:
    """–û–±—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    telegram: TelegramConfig
    bot: BotConfig
    first_run: bool = True


class ConfigManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    def __init__(self, config_file: str = ".config.json"):
        self.config_file = Path(config_file)
        self.console = Console()
        self.config = self._load_config()
    
    def _load_config(self) -> AppConfig:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
        if self.config_file.exists():
            try:
                with open(self.config_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                
                telegram_config = TelegramConfig(**data.get('telegram', {}))
                bot_config = BotConfig(**data.get('bot', {}))
                
                return AppConfig(
                    telegram=telegram_config,
                    bot=bot_config,
                    first_run=data.get('first_run', True)
                )
            except Exception as e:
                self.console.print(f"[yellow]–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}[/yellow]")
                self.console.print("[yellow]–°–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è[/yellow]")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        return AppConfig(
            telegram=TelegramConfig(),
            bot=BotConfig(),
            first_run=True
        )
    
    def save_config(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª"""
        try:
            config_data = {
                'telegram': asdict(self.config.telegram),
                'bot': asdict(self.config.bot),
                'first_run': self.config.first_run
            }
            
            with open(self.config_file, 'w', encoding='utf-8') as f:
                json.dump(config_data, f, ensure_ascii=False, indent=2)
                
        except Exception as e:
            self.console.print(f"[red]–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}[/red]")
    
    def is_telegram_configured(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram API"""
        return (self.config.telegram.api_id and 
                self.config.telegram.api_hash and 
                self.config.telegram.phone)
    
    def is_bot_configured(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"""
        return (self.config.bot.enabled and 
                self.config.bot.bot_token and 
                self.config.bot.chat_id)
    
    def setup_telegram_config(self, force_setup: bool = False):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram API"""
        if self.is_telegram_configured() and not force_setup:
            if not Confirm.ask("Telegram API —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?"):
                return
        
        self.console.print("\n[bold blue]–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram API[/bold blue]")
        self.console.print(Panel(
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è API ID –∏ API Hash:\n"
            "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://my.telegram.org/auth\n"
            "2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Telegram\n"
            "3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'API development tools'\n"
            "4. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            title="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            box=box.ROUNDED
        ))
        
        # –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
        api_id = Prompt.ask("API ID", default=self.config.telegram.api_id or "")
        api_hash = Prompt.ask("API Hash", password=True, default=self.config.telegram.api_hash or "")
        phone = Prompt.ask("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä +7)", default=self.config.telegram.phone or "")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        self.config.telegram.api_id = api_id
        self.config.telegram.api_hash = api_hash
        self.config.telegram.phone = phone
        
        self.save_config()
        self.console.print("[green]‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram API —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞[/green]")
    
    def setup_bot_config(self, force_setup: bool = False):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞"""
        if not force_setup and self.config.bot.enabled:
            if not Confirm.ask("–ë–æ—Ç —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?"):
                return
        
        if not Confirm.ask("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞?"):
            self.config.bot.enabled = False
            self.save_config()
            return
        
        self.console.print("\n[bold blue]–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞[/bold blue]")
        self.console.print(Panel(
            "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞:\n"
            "1. –ù–∞–π–¥–∏—Ç–µ @BotFather –≤ Telegram\n"
            "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot\n"
            "3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏ –ø–æ–ª—É—á–∏—Ç–µ Bot Token\n"
            "4. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @userinfobot",
            title="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            box=box.ROUNDED
        ))
        
        # –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
        bot_token = Prompt.ask("Bot Token", password=True, default=self.config.bot.bot_token or "")
        chat_id = Prompt.ask("Chat ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", default=self.config.bot.chat_id or "")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        if self._test_bot(bot_token, chat_id):
            self.config.bot.bot_token = bot_token
            self.config.bot.chat_id = chat_id
            self.config.bot.enabled = True
            
            self.save_config()
            self.console.print("[green]‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞[/green]")
        else:
            self.console.print("[red]‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞[/red]")
            if Confirm.ask("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É?"):
                self.config.bot.bot_token = bot_token
                self.config.bot.chat_id = chat_id
                self.config.bot.enabled = True
                self.save_config()
            else:
                self.config.bot.enabled = False
                self.save_config()
    
    def _test_bot(self, bot_token: str, chat_id: str) -> bool:
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
        try:
            import requests
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
            url = f"https://api.telegram.org/bot{bot_token}/getMe"
            response = requests.get(url, timeout=10)
            
            if response.status_code != 200:
                self.console.print("[red]‚úó –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞[/red]")
                return False
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            test_message = "ü§ñ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Telegram Channel Exporter"
            url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
            data = {
                'chat_id': chat_id,
                'text': test_message
            }
            
            response = requests.post(url, data=data, timeout=10)
            
            if response.status_code == 200:
                self.console.print("[green]‚úì –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ[/green]")
                return True
            else:
                self.console.print(f"[red]‚úó –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {response.status_code}[/red]")
                return False
                
        except Exception as e:
            self.console.print(f"[red]‚úó –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞: {e}[/red]")
            return False
    
    def show_current_config(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        table = Table(title="–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", box=box.ROUNDED)
        table.add_column("–ü–∞—Ä–∞–º–µ—Ç—Ä", style="cyan")
        table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="green")
        table.add_column("–°—Ç–∞—Ç—É—Å", style="yellow")
        
        # Telegram API
        table.add_row(
            "API ID", 
            self.config.telegram.api_id[:10] + "..." if self.config.telegram.api_id and len(self.config.telegram.api_id) > 10 else self.config.telegram.api_id or "–ù–µ –∑–∞–¥–∞–Ω–æ",
            "‚úì –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ" if self.config.telegram.api_id else "‚úó –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
        )
        
        table.add_row(
            "API Hash", 
            "***—Å–∫—Ä—ã—Ç–æ***" if self.config.telegram.api_hash else "–ù–µ –∑–∞–¥–∞–Ω–æ",
            "‚úì –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ" if self.config.telegram.api_hash else "‚úó –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
        )
        
        table.add_row(
            "–¢–µ–ª–µ—Ñ–æ–Ω", 
            self.config.telegram.phone or "–ù–µ –∑–∞–¥–∞–Ω–æ",
            "‚úì –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ" if self.config.telegram.phone else "‚úó –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
        )
        
        # –ë–æ—Ç
        table.add_row(
            "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±–æ—Ç–∞", 
            "–í–∫–ª—é—á–µ–Ω—ã" if self.config.bot.enabled else "–û—Ç–∫–ª—é—á–µ–Ω—ã",
            "‚úì –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ" if self.config.bot.enabled else "‚úó –û—Ç–∫–ª—é—á–µ–Ω–æ"
        )
        
        if self.config.bot.enabled:
            table.add_row(
                "Bot Token", 
                "***—Å–∫—Ä—ã—Ç–æ***" if self.config.bot.bot_token else "–ù–µ –∑–∞–¥–∞–Ω–æ",
                "‚úì –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ" if self.config.bot.bot_token else "‚úó –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
            )
            
            table.add_row(
                "Chat ID", 
                self.config.bot.chat_id or "–ù–µ –∑–∞–¥–∞–Ω–æ",
                "‚úì –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ" if self.config.bot.chat_id else "‚úó –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
            )
        
        self.console.print(table)
    
    def interactive_setup(self):
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        while True:
            self.console.clear()
            self.console.print(Panel.fit(
                "[bold blue]–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π[/bold blue]",
                box=box.DOUBLE
            ))
            
            self.show_current_config()
            
            self.console.print("\n[bold cyan]–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:[/bold cyan]")
            self.console.print("1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram API")
            self.console.print("2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
            self.console.print("3. –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
            self.console.print("4. –°–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
            self.console.print("5. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
            self.console.print("0. –í—ã—Ö–æ–¥")
            
            choice = Prompt.ask("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", choices=["0", "1", "2", "3", "4", "5"])
            
            if choice == "1":
                self.setup_telegram_config(force_setup=True)
            elif choice == "2":
                self.setup_bot_config(force_setup=True)
            elif choice == "3":
                input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            elif choice == "4":
                if Confirm.ask("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é?"):
                    self.reset_config()
            elif choice == "5":
                break
            elif choice == "0":
                return False
        
        return True
    
    def reset_config(self):
        """–°–±—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        try:
            if self.config_file.exists():
                self.config_file.unlink()
            
            self.config = AppConfig(
                telegram=TelegramConfig(),
                bot=BotConfig(),
                first_run=True
            )
            
            self.console.print("[green]‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω–∞[/green]")
            
        except Exception as e:
            self.console.print(f"[red]–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}[/red]")
    
    def ensure_configured(self) -> bool:
        """–£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
        if self.config.first_run:
            self.console.print(Panel.fit(
                "[bold green]–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram Channel Exporter![/bold green]\n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.",
                box=box.DOUBLE
            ))
            self.config.first_run = False
            self.save_config()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram API
        if not self.is_telegram_configured():
            self.console.print("[yellow]‚ö† Telegram API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω[/yellow]")
            self.setup_telegram_config()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if not self.config.bot.enabled and self.config.first_run:
            self.setup_bot_config()
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        if not self.is_telegram_configured():
            self.console.print("[red]‚úó Telegram API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.[/red]")
            return False
        
        return True
    
    def get_telegram_config(self) -> TelegramConfig:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram"""
        return self.config.telegram
    
    def get_bot_config(self) -> BotConfig:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞"""
        return self.config.bot